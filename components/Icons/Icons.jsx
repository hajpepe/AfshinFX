/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { animated, useSpring, easings } from 'react-spring';

const Property1Menu = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
  width: 'fit-content',
});

const MenuClose = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const MenuIco1 = animated(
  styled('img')({
    height: `26px`,
    width: `26px`,
    objectFit: `cover`,
    margin: `0px`,
  })
);

const MenuOpen = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `26px`,
  height: `26px`,
  margin: `0px 0px 0px 34px`,
});

const Close1 = animated(
  styled('img')({
    height: `20px`,
    width: `20px`,
    objectFit: `cover`,
    margin: `0px`,
  })
);

function Icons(props) {
  const [MenuIco1Spring, MenuIco1Api] = useSpring(() => ({
    config: {
      duration: 250,
      easing: easings['easeOutCubic'],
    },
    delay: 0,
    from: { transform: 'rotate(0deg)', opacity: 1 },
  }));

  const [Close1Spring, Close1Api] = useSpring(() => ({
    config: {
      duration: 250,
      easing: easings['easeOutCubic'],
    },
    delay: 0,
    from: { transform: 'rotate(0deg)', opacity: 1 },
  }));
  return (
    <Property1Menu className={props.className}>
      <MenuClose
        onClick={() => {
          MenuIco1Api.start({
            ...{ transform: 'rotate(-90deg)', opacity: 0 },
            delay: 0,
          });
        }}
      >
        <MenuIco1
          style={{ ...MenuIco1Spring }}
          src={`assets/images/Icons_menu_ico_1.png`}
          loading="lazy"
          alt={'menu-ico 1'}
        />
      </MenuClose>
      {false && (
        <MenuOpen>
          <Close1
            onClick={() => {
              Close1Api.start({
                ...{ transform: 'rotate(-90deg)', opacity: 0 },
                delay: 0,
              });
            }}
            style={{ ...Close1Spring }}
            src={`assets/images/Icons_Close_1.png`}
            loading="lazy"
            alt={'Close 1'}
          />
        </MenuOpen>
      )}
    </Property1Menu>
  );
}

export default Icons;

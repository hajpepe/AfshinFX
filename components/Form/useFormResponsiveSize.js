/**********************************************************************
 *
 *   Responsiveness hook generated by Quest
 *
 *   Responsive Logic for the component goes in this hook
 *   If you want to customize the min/max values for the breakpoints, open the component on Quest Editor.
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

const useFormResponsiveSize = () => {
  const [variant, setVariant] = React.useState('Desktoplarg2k');

  React.useEffect(() => {
    const handlerScreenmobile375 = (e) =>
      setVariant((size) => (e.matches ? 'Screenmobile375' : size));

    const Screenmobile375Size = window.matchMedia('(max-width: 383px)');
    setVariant((size) =>
      Screenmobile375Size.matches ? 'Screenmobile375' : size
    );
    Screenmobile375Size.addEventListener('change', handlerScreenmobile375);

    const handlerScreenMobile390 = (e) =>
      setVariant((size) => (e.matches ? 'ScreenMobile390' : size));

    const ScreenMobile390Size = window.matchMedia(
      '(min-width: 384px) and (max-width: 555px)'
    );
    setVariant((size) =>
      ScreenMobile390Size.matches ? 'ScreenMobile390' : size
    );
    ScreenMobile390Size.addEventListener('change', handlerScreenMobile390);

    const handlerScreensmalldesktop720 = (e) =>
      setVariant((size) => (e.matches ? 'Screensmalldesktop720' : size));

    const Screensmalldesktop720Size = window.matchMedia(
      '(min-width: 556px) and (max-width: 872px)'
    );
    setVariant((size) =>
      Screensmalldesktop720Size.matches ? 'Screensmalldesktop720' : size
    );
    Screensmalldesktop720Size.addEventListener(
      'change',
      handlerScreensmalldesktop720
    );

    const handlerScreenTablet1024 = (e) =>
      setVariant((size) => (e.matches ? 'ScreenTablet1024' : size));

    const ScreenTablet1024Size = window.matchMedia(
      '(min-width: 873px) and (max-width: 1472px)'
    );
    setVariant((size) =>
      ScreenTablet1024Size.matches ? 'ScreenTablet1024' : size
    );
    ScreenTablet1024Size.addEventListener('change', handlerScreenTablet1024);

    const handlerScreendesktop1080 = (e) =>
      setVariant((size) => (e.matches ? 'Screendesktop1080' : size));

    const Screendesktop1080Size = window.matchMedia(
      '(min-width: 1473px) and (max-width: 1984px)'
    );
    setVariant((size) =>
      Screendesktop1080Size.matches ? 'Screendesktop1080' : size
    );
    Screendesktop1080Size.addEventListener('change', handlerScreendesktop1080);

    const handlerDesktoplarg2k = (e) =>
      setVariant((size) => (e.matches ? 'Desktoplarg2k' : size));

    const Desktoplarg2kSize = window.matchMedia('(min-width: 1985px)');
    setVariant((size) => (Desktoplarg2kSize.matches ? 'Desktoplarg2k' : size));
    Desktoplarg2kSize.addEventListener('change', handlerDesktoplarg2k);
  }, []);

  return variant;
};

export default useFormResponsiveSize;
